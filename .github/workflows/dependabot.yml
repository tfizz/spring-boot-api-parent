name: Dependabot PR Review

on:
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  init:
    name: Initialization
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    outputs:
      package-ecosystem: ${{ steps.dependabot-metadata.outputs.package-ecosystem }}
    steps:
      - name: Fetch Dependabot Metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2.4.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

  update_version:
    name: Update Project Version
    runs-on: ubuntu-latest
    needs: [init]
    if: ${{ needs.init.outputs.package-ecosystem == 'maven' }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          ref: "${{ github.head_ref }}"

      - name: Get Parent Pom Version
        id: get_pom_version
        uses: mikefarah/yq@master
        with:
          cmd: yq -oy '.project.parent.version' pom.xml

      - name: Set Version
        env:
          VERSION: ${{ steps.get_pom_version.outputs.result }}
        run: |
          mvn --version
          mvn versions:set -DnewVersion="$VERSION"

      - name: Commit Changes
        env:
          VERSION: ${{ steps.get_pom_version.outputs.result }}
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          git --version
          git config user.name "dependabot[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pom.xml
          git commit -m "Preparing release $VERSION"
          git push -u origin HEAD

  auto_approve:
    name: Approve & Merge PR
    runs-on: ubuntu-latest
    needs: [init, update_version]
    steps:
      - name: Approve PR
        run: gh pr review --approve "$PR_URL"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          PR_URL: "${{ github.event.pull_request.html_url }}"

      - name: Merge PR
        run: gh pr merge --merge "$PR_URL"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          PR_URL: "${{ github.event.pull_request.html_url }}"